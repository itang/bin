#!/usr/bin/env ruby

name = ARGV[0] || 'test-swift'
puts "new project: #{name}"

def sh(cmd)
  puts cmd
  ret = system cmd
  raise 'Error' unless ret
end

sh "mkdir #{name}"

sh "cd #{name}; swift package init --type executable"

package_content = <<-eos
import PackageDescription

let package = Package(
    name: "#{name}",
    dependencies: [
        //.Package(url: "https://github.com/apple/example-package-deckofplayingcards.git", majorVersion: 1),
    ]
)

eos

File.write "#{name}/Package.swift", package_content

rakefile_content = <<-eos
task default: :run

file '.build/debug/#{name}' => Dir['Sources/**/*.swift'] do
  sh 'swift build'
end

desc 'build'
task build: '.build/debug/#{name}' do
end

desc 'run'
task run: :build do
  sh '.build/debug/#{name}'
end

desc 'guard'
task :guard do
  sh 'guard'
end

eos

File.write "#{name}/Rakefile", rakefile_content

begin
  sh "cd #{name};guard init shell"
rescue ex
  sh 'gem install guard-shell'
end

guard_content = <<-eos
guard :shell do
  watch(/Sources\\/(.*).swift/) do |m|
    puts m[0] + " has changed."
    system "rake run"
  end
end

eos

File.write "#{name}/Guardfile", guard_content
