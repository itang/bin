#!/usr/bin/env ruby

def sh(cmd)
    puts cmd
    system cmd
end

def new_phoenix_project
    project_name = ARGV[1] || 'test_phoenix'
    sh "mix phoenix.new #{project_name} --no-brunch --no-ecto --no-html"
end

$base_fabfile_content = <<-eos
# -*- coding: utf-8 -*-

from fabric.api import *


def help():
    """help"""
    print('help')


eos
def new_fabfile
    content = $base_fabfile_content

    File.write 'fabfile.py', content
end

def new_openresty_project
    project_name = ARGV[1] || 'test_openresty'
    sh("mkdir -p #{project_name}/logs")
    sh("mkdir -p #{project_name}/conf")

    content = <<-eos
worker_processes  1;
error_log logs/error.log;

events {
    worker_connections 1024;
}

http {
    server {
        listen 3000;
        location / {
            default_type text/html;
            content_by_lua '
                ngx.say("<p>hello, world</p>")
            ';
        }
    }
}

  eos

    File.write "#{project_name}/conf/nginx.conf", content

    content = <<-eos
def start():
    """nginx start"""
    local('[ -d "./logs" ] || mkdir logs')
    local('nginx -p `pwd`/ -c conf/nginx.conf')


def run():
    """nginx run"""
    start()


def reload():
    """nginx reload"""
    local('nginx -p `pwd`/ -s reload')


def stop():
    """nginx stop"""
    with warn_only():
        local('nginx -p `pwd`/ -s stop')


def restart():
    """restart"""
    stop()
    run()


  eos

    content = "#{$base_fabfile_content}#{content}"

    File.write "#{project_name}/fabfile.py", content

    content = <<-eos
*.pyc

logs/

tmp/
target/

.idea/

eos

    File.write "#{project_name}/.gitignore", content

    puts "cd #{project_name}"
end

def _parse(type)
    _, tmp, *tail = ARGV

    project_name = tmp || "test_#{type}"
    args = tail

    [project_name, args]
end

def new_kotlin_project
    project_name, args = _parse('kotlin')
    sh "ktnew #{project_name} #{args.join(' ')}"
end

def new_swift_project
    project_name, args = _parse('swift')
    sh "swiftnew #{project_name} #{args.join(' ')}"
end
#############################################

tmp = ARGV[0]

# tmp || (raise "no template!")

case tmp
when 'phoenix'
    new_phoenix_project
when 'fabfile'
    new_fabfile
when 'openresty'
    new_openresty_project
when 'kotlin'
    new_kotlin_project
when 'swift'
    new_swift_project
else
    puts 'Usage: new phoenix project_name | fabfile | openresty project_name | kotlin project_name | swift project_name'
    # raise "unsupported"
end
