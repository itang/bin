#!/usr/bin/env ruby

name = ARGV[0] || 'test-oden'

def sh(cmd)
  puts cmd
  ret = system cmd
  fail 'error' unless ret
end

################################################################################
sh "mkdir #{name}"

%w(src).each do |x|
  sh "mkdir -p #{name}/#{x}"
end

main_content = <<-eos
package main

import fmt

square :: int -> int
square n -> n * n

twice :: (#a -> #a) -> #a -> #a
twice f x -> f(f(x))

main :: -> ()
main -> let n = twice(square, 2) in {
    fmt.Println("2\x2074 =", n)
}

eos

File.write "#{name}/src/main.oden", main_content

gitignore_content = <<-eos
target/

eos
File.write "#{name}/.gitignore", gitignore_content

## guard file

guard_content = <<-eos
## gem install guard-shell
guard :shell do
  watch(/src\\/(.*).oden/) do |m|
    puts m[0] + " has changed."
    system "oden run src/main.oden"
  end
end
eos

File.write "#{name}/Guardfile", guard_content

rake_content = <<-eos
task :default do
  sh 'rake -T'
end

desc 'bulid'
task :build do
  sh 'oden build'
end

desc 'run'
task :run do
  sh 'oden run src/main.oden'
end

namespace :oden do
  desc 'oden version'
  task :version do
    sh 'oden -V'
  end
end

eos

File.write "#{name}/Rakefile", rake_content

sh "cd #{name}; tree"
