#!/usr/bin/env ruby

KOTLIN_VERSION = '1.2.41'.freeze

name = ARGV[0] || 'test-kotlin'

def sh(cmd)
  puts cmd
  ret = system cmd
  raise 'error' unless ret
end

################################################################################
sh "mkdir #{name}"

%w[resources kotlin].each do |x|
  sh "mkdir -p #{name}/src/main/#{x}"
end

sh "cd #{name}; gradle init"

build_content = <<-eos
buildscript {
    ext {
        kotlinVersion = '#{KOTLIN_VERSION}'
    }
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    //maven {
    //    url "http://www.haoshuju.net:8078/"
    //}
    jcenter()
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    //compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

    testCompile "junit:junit:4.12"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
}

mainClassName = 'demo.MainKt'
defaultTasks 'run'

eos

File.write "#{name}/build.gradle", build_content

main_content = <<-eos
package demo

fun main(args: Array<String>) {
    println("Hello, Kotlin")
}

eos

sh "mkdir -p #{name}/src/main/kotlin/demo"
sh "mkdir -p #{name}/src/main/java"
sh "mkdir -p #{name}/src/main/resources"
File.write "#{name}/src/main/kotlin/demo/Main.kt", main_content

################################################################

test_content = <<-eos
package demo

import org.junit.Test
import kotlin.test.assertEquals

class TestDemo {

    @Test
    fun testDemo() {
        assertEquals(1 + 1, 2)
    }
}

eos

sh "mkdir -p #{name}/src/test/kotlin/demo"
File.write "#{name}/src/test/kotlin/demo/TestDemo.kt", test_content

################################################################
gp_content = <<-eos
kotlin.incremental=true
eos

File.write "#{name}/gradle.properties", gp_content

gitignore_content = <<-eos
.gradle
build/

# Ignore Gradle GUI config
gradle-app.setting

# Avoid ignoring Gradle wrapper jar file (.jar files are usually ignored)
# !gradle-wrapper.jar

# Cache of project
.gradletasknamecache

.idea
*.iml

.settings
.classpath
.project

eos
File.write "#{name}/.gitignore", gitignore_content

## fabfile

content = <<-eos
# -*- coding: utf-8 -*-

from fabric.api import *


def run():
    """run"""
    local('./gradlew run')


def dev():
    """dev"""
    local('watchexec "./gradlew run -no-daemon"')


def clean():
    """clean"""
    local('./gradlew clean')


eos

File.write("#{name}/fabfile.py", content)

sh "cd #{name}; tree"

puts "cd #{name}"
