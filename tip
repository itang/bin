#!/bin/bash

function display_curl() {
    echo '
    curl -sSL https://git.io/gobackup | bash

    curl -L -o coursier https://git.io/vgvpD 
    '
}

function display_svn() {
   echo '
   格式: svn propset svn:global-ignores filelist .
   格式: svn propset svn:ignore filePattern .

   $ svn propget svn:ignore backend
   $ svn pg svn:ignore backend
   $ svn pg svn:global-ignores
   $ svn status --no-ignore | grep "^I"
   $ svn pg svn:global-ignores . -v --show-inherited-props

   $ svn propset svn:ignore "*.pem" .
   $ svn propset svn:ignore "1.pem 2.pem " .
   $ svn propset svn:ignore -RF /root/svn-ignore.txt .

   $ svn proplist -v

   links: http://139.199.4.119/book/learn/scm/svn.html
   '
}

function display_ssh() {
    echo '
    $ ssh -p 22 user@host
    $ ssh -p 12367 -fNTL 8162:localhost:8161 user@host

    $ ssh USER@REMOTE_HOST "cat >> ~/.ssh/authorized_keys" < ~/.ssh/id_rsa.pub
     chmod 700 ~/.ssh
     chmod 600 ~/.ssh/authorized_keys
    '
}

function display_git() {
    echo '
    TODO
    '
}

function display_mysql() {
    echo '
    TODO
    '
}

function display_docker() {
    echo '
    docker run -it --name mypostgres -p 5432:5432 postgres
    docker run -it --name mypostgres -p 5432:5432 -d postgres

    docker start mypostgres
    docker exec -it mypostgres /bin/bash 
    '
}

function display_jmap() {
    echo '
    TODO
    '
}

function display_jstack() {
    echo '
    TODO
    '
}

function display_jstat() {
    echo '
    TODO
    '
}

function display_top() {
    echo '
    TODO
    '
}

function display_ps() {
    echo '
    TODO
    '
}

function display_sbt() {
    echo '
    links: https://github.com/foundweekends/giter8/wiki/giter8-templates

    sbt -Dsbt.version=1.0.3 new https://github.com/akka/akka-http-scala-seed.g8
    sbt new scala/scala-seed.g8
    sbt new scala/scala-seed.g8
    sbt new scala/hello-world.g8
    sbt new Daxten/bay-scalajs.g8
    sbt ne vmunier/akka-http-scalajs.g8
    sbt new akka/akka-scala-seed.g8
    sbt new akka/akka-java-seed.g8
    sbt new akka/hello-akka.g8
    sbt new playframework/play-scala-seed.g8
    sbt new playframework/play-java-seed.g8
    sbt new lagom/lagom-scala.g8
    sbt new lagom/lagom-java.g8 
    sbt new scala-native/scala-native.g8
    sbt new scala-native/sbt-crossproject.g8
    sbt new http4s/http4s.g8

    sbt new holdenk/sparkProjectTemplate.g8
    sbt new spark-jobserver/spark-jobserver.g8 
    sbt new joost-de-vries/play-angular-typescript.g8
    sbt new joost-de-vries/play-reactjs-typescript.g8
    sbt new ScalaWilliam/akka-stream-kafka-template.g8
    sbt new liquidarmour/akka-http-docker.g8

    sbt new djspiewak/base.g8
    sbt new anvie/multiproject.g8
    '
}

function display_docker_compose() {
    echo '
    docker-compose exec activemq /bin/bash
    docker-compose logs -f --tail=200 activemq
    docker-compose exec activemq /bin/bash -c "tail -f -n 1000 /var/log/activemq/activemq.log"
    '
}

function display_xclip() {
    echo '
    xclip -sel clip < ~/.ssh/id_rsa.pub
    '
}

function diplay_iconv() {
    echo '
    iconv -f GBK -t UTF-8 input.txt > output.txt
    iconv -f GBK -t UTF-8 xxx.file -o good.file
    '
}

function display_systemctl() {
    echo '
    systemctl list-units --all | grep redis
    systemctl list-units
    systemctl list-units --all --state=inactive
    systemctl list-units --all
    systemctl list-unit-files
    
    sudo systemctl enable application.service
    sudo systemctl disable application.service
    systemctl is-failed application.service
    sudo systemctl is-enabled nginx
    systemctl show sshd.service
    systemctl is-active application.service
    systemctl status application.service
    
    sudo systemctl start nginx.service
    sudo systemctl stop application.service
    sudo systemctl restart application.service
    sudo systemctl reload-or-restart application.service
    
    systemctl list-dependencies sshd.service
    
    sudo systemctl edit nginx.service
    
    sudo systemctl daemon-reload
    '
}

function display_ulimit() {
    echo '
    查看系统的一些资源限制情况
    ulimit -a

    查看当前用户进程最大文件打开数
    ulimit -n

    当前shell设置
    ulimit -n 100000


    某个具体用户的资源加以限制的方法
    /etc/security/limits

    <domain> <type> <item> <value> 
    domain 表示用户或者组的名字，还可以使用 * 作为通配符。Type 可以有两个值，soft 和 hard。Item 则表示需要限定的资源，可以有很多候选值，如 stack，cpu，nofile 等等，分别表示最大的堆栈大小，占用的 cpu 时间，以及打开的文件数, e.g:
    * hard noflle 100


    links: https://yq.aliyun.com/articles/80530
    '
}

###################################
case "$1" in
  curl) display_curl;;
  svn)  display_svn ;;
  ssh)  display_ssh ;;
  git)  display_git ;;
  mysql) diplay_mysql ;;
  docker) diplay_docker ;;
  jmap) display_jmap ;;
  jstack) display_jstack ;;
  jstat) display_jstat ;;
  top) display_top ;;
  ps) display_ps ;;
  sbt) display_sbt ;;
  docker-compose) display_docker_compose ;;
  xclip) display_xclip;;
  iconv) diplay_iconv;;
  systemctl) display_systemctl;;
  ulimit) display_ulimit;;

  *)  echo '
      $ tip curl | svn | ssh | git | mysql | jmap | jstack | jstat | top | ps | sbt | docker-compose | xclip | iconv |
            systemctl | ulimit';;
esac
